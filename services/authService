const axios = require('axios');
const querystring = require('querystring');
const dotenv = require('dotenv');
dotenv.config();

const CLIENT_ID = process.env.CLIENT_ID;
const CLIENT_SECRET = process.env.CLIENT_SECRET;
const REDIRECT_URI = 'http://localhost:3000'; // Update the redirect URI here

const authService = {
  generateAuthURL: () => {
    const scopes = [
      'user-read-private',
      'user-read-email',
      'user-library-read',
      'playlist-modify-public',
      'playlist-modify-private'
    ];

    const authParams = querystring.stringify({
      client_id: CLIENT_ID,
      response_type: 'code',
      redirect_uri: REDIRECT_URI,
      scope: scopes.join(' ')
    });

    const authURL = `https://accounts.spotify.com/authorize?${authParams}`;
    return authURL;
  },

  exchangeCodeForTokens: async (code) => {
    const authOptions = {
      url: 'https://accounts.spotify.com/api/token',
      method: 'POST',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
        Authorization: `Basic ${Buffer.from(`${CLIENT_ID}:${CLIENT_SECRET}`).toString('base64')}`
      },
      data: querystring.stringify({
        grant_type: 'authorization_code',
        code,
        redirect_uri: REDIRECT_URI
      })
    };

    try {
      const response = await axios(authOptions);
      return response.data;
    } catch (error) {
      throw error;
    }
  }
};

module.exports = authService;
